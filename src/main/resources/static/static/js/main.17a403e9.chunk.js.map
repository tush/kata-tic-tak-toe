{"version":3,"sources":["components/Button.js","components/Header.js","components/Square.js","components/GameBoard.js","components/Game.js","components/Games.js","components/PlayerNameForm.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","addGame","player","location","useLocation","pathname","Square","value","param","renderSwitch","GameBoard","game","onSquareClick","onJoinGame","renderSquare","posX","posY","board","status","nextPlayer","id","handleClick","playerX","name","winner","Game","useState","showGameBoard","setShowGameBoard","getStyle","playerO","cursor","float","Games","games","map","PlayerNameForm","onSetPlayerName","setText","onSubmit","e","preventDefault","alert","type","placeholder","onChange","target","Footer","to","About","App","setPlayer","setGames","useEffect","getGames","a","fetchGames","fetch","headers","rs","json","data","onAddPlayer","method","body","resp","newPlayer","connectionRequest","JSON","stringify","newGame","gameId","playerType","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a403e9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nfunction Button({ color, text, onClick }) {\n  return (\n    <button\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nexport const Header = ({ title, addGame, player }) => {\n  const location = useLocation();\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      {location.pathname === \"/\" && player !== null && (\n        <Button text=\"Create\" onClick={addGame} />\n      )}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Tic Tak Toe Game\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","function Square({ value, onClick }) {\n  const renderSwitch = (param) => {\n    switch (param) {\n      case 1:\n        return \"X\";\n      case 2:\n        return \"O\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {renderSwitch(value)}\n    </button>\n  );\n}\n\nexport default Square;\n","import Square from \"./Square\";\nimport Button from \"./Button\";\n\nfunction GameBoard({ game, onSquareClick, onJoinGame, player }) {\n  const handleClick = (posX, posY) => {\n    if (\n      game.status !== \"FINISHED\" &&\n      game.status !== \"DRAW\" &&\n      game[\"player\" + game.nextPlayer]?.id === player.id &&\n      game.board[posX][posY] === 0\n    ) {\n      onSquareClick(posX, posY, game.id, game.nextPlayer);\n    }\n  };\n\n  const renderSquare = (posX, posY) => {\n    return (\n      <Square\n        value={game.board[posX][posY]}\n        onClick={() => handleClick(posX, posY)}\n      />\n    );\n  };\n\n  return (\n    <div className=\"game-board\">\n      {game.status === \"NEW\" && player.id !== game.playerX.id && (\n        <Button text=\"Join\" onClick={() => onJoinGame(game.id)} />\n      )}\n      <div className=\"status\">\n        {game.status === \"IN_PROGRESS\" && (\n          <p>Next Player: {game[\"player\" + game.nextPlayer]?.name}</p>\n        )}\n        {game?.winner && <p>Winner: {game?.winner}</p>}\n        {(game.status === \"FINISHED\" || game.status === \"DRAW\") && (\n          <p>Status: {game?.status}</p>\n        )}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(0, 0)}\n        {renderSquare(0, 1)}\n        {renderSquare(0, 2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(1, 0)}\n        {renderSquare(1, 1)}\n        {renderSquare(1, 2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(2, 0)}\n        {renderSquare(2, 1)}\n        {renderSquare(2, 2)}\n      </div>\n    </div>\n  );\n}\n\nexport default GameBoard;\n","import { useState } from \"react\";\nimport { FaAngleDown, FaAngleUp } from \"react-icons/fa\";\nimport GameBoard from \"./GameBoard\";\n\nfunction Game({ game, onJoinGame, onSquareClick, player }) {\n  const [showGameBoard, setShowGameBoard] = useState(false);\n\n  const getStyle = (param) => {\n    switch (param) {\n      case \"IN_PROGRESS\":\n        return \"in-progress\";\n      case \"FINISHED\":\n        return \"finished\";\n      case \"NEW\":\n        return \"new\";\n      case \"DRAW\":\n        return \"draw\";\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <>\n      <div className={`game ${getStyle(game.status)} `}>\n        <p>\n          <span>Player X: {game?.playerX?.name}</span>\n          <span>Player O: {game?.playerO?.name}</span>\n\n          {!showGameBoard ? (\n            <FaAngleDown\n              style={{ cursor: \"pointer\", float: \"right\" }}\n              onClick={() => setShowGameBoard(!showGameBoard)}\n            />\n          ) : (\n            <FaAngleUp\n              style={{ cursor: \"pointer\", float: \"right\" }}\n              onClick={() => setShowGameBoard(!showGameBoard)}\n            />\n          )}\n        </p>\n      </div>\n      <div>\n        {showGameBoard && (\n          <GameBoard\n            game={game}\n            onSquareClick={onSquareClick}\n            onJoinGame={onJoinGame}\n            player={player}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n","import Game from \"./Game\";\n\nfunction Games({ games, onJoinGame, onSquareClick, player }) {\n  return (\n    <>\n      {games.map((game) => (\n        <Game\n          key={game.id}\n          game={game}\n          onJoinGame={onJoinGame}\n          onSquareClick={onSquareClick}\n          player={player}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default Games;\n","import { useState } from \"react\";\n\nfunction PlayerNameForm({ onSetPlayerName }) {\n  const [text, setText] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!text) {\n      alert(\"Add Text\");\n      return;\n    }\n    onSetPlayerName(text);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Player Name</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Name\"\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <input type=\"submit\" className=\"btn btn-block\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport default PlayerNameForm;\n","import { Link } from \"react-router-dom\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\n\nfunction About() {\n  return (\n    <div>\n      <h4>Version 1.0</h4>\n      <Link to=\"/\">Go Back</Link>\n    </div>\n  );\n}\n\nexport default About;\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { FaSyncAlt } from \"react-icons/fa\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport Games from \"./components/Games\";\nimport PlayerNameForm from \"./components/PlayerNameForm\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [player, setPlayer] = useState(null);\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    getGames();\n  }, []);\n\n  const getGames = async () => {\n    const games = await fetchGames();\n    setGames(games);\n  };\n\n  const fetchGames = async () => {\n    const rs = await fetch(`/game/games`, {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    });\n    const data = await rs.json();\n    return data;\n  };\n\n  const onAddPlayer = async (name) => {\n    const resp = await fetch(`/player/add`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: name,\n    });\n    const newPlayer = await resp.json();\n    setPlayer(newPlayer);\n  };\n\n  const addGame = async () => {\n    const connectionRequest = {\n      player: player,\n    };\n\n    const resp = await fetch(`/game/start`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(connectionRequest),\n    });\n    const newGame = await resp.json();\n    setGames([...games, newGame]);\n  };\n\n  const onJoinGame = async (gameId) => {\n    const connectionRequest = {\n      gameId: gameId,\n      player: player,\n    };\n    const resp = await fetch(`/game/connect`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(connectionRequest),\n    });\n    const newGame = await resp.json();\n    setGames(\n      games.map((game) => (game.id === newGame.id ? { ...newGame } : game))\n    );\n  };\n\n  const onSquareClick = async (posX, posY, gameId, playerType) => {\n    const connectionRequest = {\n      gameId: gameId,\n      type: playerType,\n      posX: posX,\n      posY: posY,\n    };\n    const resp = await fetch(`/game/play`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(connectionRequest),\n    });\n    const newGame = await resp.json();\n    setGames(\n      games.map((game) => (game.id === newGame.id ? { ...newGame } : game))\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header player={player} addGame={addGame} />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {!player && <PlayerNameForm onSetPlayerName={onAddPlayer} />}\n              <div>\n                <h3>\n                  Games List{\" \"}\n                  <FaSyncAlt\n                    style={{ cursor: \"pointer\", float: \"right\" }}\n                    onClick={() => getGames()}\n                  />\n                </h3>\n                {player && games.length > 0 ? (\n                  <Games\n                    games={games}\n                    onJoinGame={onJoinGame}\n                    onSquareClick={onSquareClick}\n                    player={player}\n                  />\n                ) : (\n                  \"No games to show\"\n                )}\n              </div>\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}